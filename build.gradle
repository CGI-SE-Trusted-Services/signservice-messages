group "org.certificateservices.messages"
description "certservice-messages"

apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "groovy"
apply plugin: "idea"
apply plugin: "project-report"
apply plugin: "certificateservices.remotesign.gradle"

ext {
    bcprovJdk15onVersion = "1.77"
    groovyVersion = "3.0.15"
    tomcatEmbedVersion = "9.0.82"
    commonsIOVersion = "2.14.0"
}
sourceCompatibility = "1.8"
targetCompatibility = "1.8"

pluginManager.withPlugin('org.certificateservices.gradle.certservice-gradle-plugin') {
    certserviceSettings {
        signjar = true
        signjarFolder = "/tmp"
        useMavenCentral = true
        licenseName = "GNU Lesser General Public License v3.0 or later"
        licenseURL = "https://www.gnu.org/licenses/lgpl-3.0-standalone.html"
        useDeveloperPOM = true
        useScmPOM = true
        scmConnection = "https://github.com/CGI-SE-Trusted-Services/certservice-messages.git"
        scmDeveloperConnection = "https://github.com/CGI-SE-Trusted-Services/certservice-messages.git"
        scmUrl = "https://github.com/CGI-SE-Trusted-Services/certservice-messages"
        projectUrl = "https://github.com/CGI-SE-Trusted-Services/certservice-messages"
    }
}

certserviceRemoteSign {
    signType = getGradleProperty("remotesign.signtype")
    keyId = getGradleProperty("remotesign.keyid")
    orgShortName = getGradleProperty("remotesign.org")
    baseURL = getGradleProperty("remotesign.baseurl")
    authCode = getEnvironmentProperty("bamboo_remotesign_api_password")
    SSLKeyStore = getGradleProperty("remotesign.keystore.path")
    SSLKeyStorePass = getGradleProperty("remotesign.keystore.password")
    SSLTrustStore = getGradleProperty("remotesign.truststore.path")
    PGPSign = true
    PGPPublicKey = getGradleProperty("remotesign.pgppublickey.path")
    sigFile = "CODESIGN"
    sign publishing.publications
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.bouncycastle:bcprov-jdk18on:${bcprovJdk15onVersion}"
    implementation("javax.xml.bind:jaxb-api:2.3.1")
    implementation("javax.activation:javax.activation-api:1.2.0")

    implementation ("org.apache.santuario:xmlsec:2.2.6"){
        exclude(module: "woodstox-core")
        exclude(module: "commons-codec")
    }
    testRuntimeOnly 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    testRuntimeOnly 'com.sun.xml.bind:jaxb-impl:2.3.1'
    testImplementation platform("org.spockframework:spock-bom:2.3-groovy-3.0")
    testImplementation "commons-io:commons-io:${commonsIOVersion}"
    testImplementation "org.spockframework:spock-core"
    testImplementation "org.apache.tomcat.embed:tomcat-embed-core:${tomcatEmbedVersion}"
    testImplementation "org.codehaus.groovy:groovy-xml:${groovyVersion}"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

publishing{
    repositories{
        maven {
            name 'mavenCentral'
            url (project.version =~ "SNAPSHOT"? "https://s01.oss.sonatype.org/content/repositories/snapshots/" : 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/')
            credentials {
                username = getGradleProperty("repository.sonatype.username")
                password = getGradleProperty("repository.sonatype.password")
            }
        }
    }
}

tasks.register('verifyRemoteSignProperties') {
    doFirst {
        verifyGradleProperties([
                "remotesign.signtype",
                "remotesign.keyid",
                "remotesign.org",
                "remotesign.baseurl",
                "remotesign.keystore.path",
                "remotesign.keystore.password",
                "remotesign.truststore.path",
                "remotesign.pgppublickey.path"
        ])

        verifyEnvironmentProperty("bamboo_remotesign_api_password")
    }
}

tasks.matching { it.name == 'signMavenPublication' }.configureEach { Task task ->
    task.dependsOn verifyRemoteSignProperties
}
