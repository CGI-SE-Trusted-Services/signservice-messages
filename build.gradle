plugins {
    id("java")
    id("maven-publish")
    id("groovy")
    id("idea")
    id("project-report")
}

group "org.signatureservice.messages"
description "signservice-messages"

ext {
    bcJdk18onVersion = "1.76"
    groovyVersion = "3.0.23"
    tomcatEmbedVersion = "10.1.36"
    commonsIOVersion = "2.18.0"
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

pluginManager.withPlugin('org.certificateservices.gradle.certservice-gradle-plugin') {
    certserviceSettings {
        useMavenCentral = true
        licenseName = "GNU Lesser General Public License v3.0 or later"
        licenseURL = "https://www.gnu.org/licenses/lgpl-3.0-standalone.html"
        useDeveloperPOM = true
        useScmPOM = true
        scmConnection = "https://github.com/CGI-SE-Trusted-Services/signservice-messages.git"
        scmDeveloperConnection = "https://github.com/CGI-SE-Trusted-Services/signservice-messages.git"
        scmUrl = "https://github.com/CGI-SE-Trusted-Services/signservice-messages"
        projectUrl = "https://github.com/CGI-SE-Trusted-Services/signservice-messages"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.bouncycastle:bcprov-jdk18on:${bcJdk18onVersion}"
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    implementation("org.apache.santuario:xmlsec:2.3.5") {
        exclude(module: "woodstox-core")
        exclude(module: "commons-codec")
    }
    testRuntimeOnly 'org.glassfish.jaxb:jaxb-runtime:4.0.2'
    testRuntimeOnly 'net.bytebuddy:byte-buddy:1.16.1'

    testImplementation 'org.objenesis:objenesis:3.4'
    testImplementation "commons-io:commons-io:${commonsIOVersion}"
    testImplementation "org.apache.tomcat.embed:tomcat-embed-core:${tomcatEmbedVersion}"
    testImplementation "org.codehaus.groovy:groovy-xml:${groovyVersion}"
    testImplementation platform("org.spockframework:spock-bom:2.3-groovy-3.0")
    testImplementation "org.spockframework:spock-core"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}
