//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package se.signatureservice.messages.sweeid2.dssextenstions1_1.jaxb;

import javax.xml.datatype.XMLGregorianCalendar;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import se.signatureservice.messages.saml2.assertion.jaxb.AttributeStatementType;
import se.signatureservice.messages.saml2.assertion.jaxb.ConditionsType;
import se.signatureservice.messages.saml2.assertion.jaxb.NameIDType;


/**
 * <p>Java class for SignRequestExtensionType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="SignRequestExtensionType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element ref="{http://id.elegnamnden.se/csig/1.1/dss-ext/ns}RequestTime"/>
 *         <element ref="{urn:oasis:names:tc:SAML:2.0:assertion}Conditions"/>
 *         <element ref="{http://id.elegnamnden.se/csig/1.1/dss-ext/ns}Signer" minOccurs="0"/>
 *         <element ref="{http://id.elegnamnden.se/csig/1.1/dss-ext/ns}IdentityProvider"/>
 *         <element ref="{http://id.elegnamnden.se/csig/1.1/dss-ext/ns}AuthnProfile" minOccurs="0"/>
 *         <element ref="{http://id.elegnamnden.se/csig/1.1/dss-ext/ns}SignRequester"/>
 *         <element ref="{http://id.elegnamnden.se/csig/1.1/dss-ext/ns}SignService"/>
 *         <element ref="{http://id.elegnamnden.se/csig/1.1/dss-ext/ns}RequestedSignatureAlgorithm" minOccurs="0"/>
 *         <element ref="{http://id.elegnamnden.se/csig/1.1/dss-ext/ns}CertRequestProperties" minOccurs="0"/>
 *         <element ref="{http://id.elegnamnden.se/csig/1.1/dss-ext/ns}SignMessage" minOccurs="0"/>
 *         <element ref="{http://id.elegnamnden.se/csig/1.1/dss-ext/ns}OtherRequestInfo" minOccurs="0"/>
 *       </sequence>
 *       <attribute name="Version" type="{http://www.w3.org/2001/XMLSchema}string" default="1.1" />
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SignRequestExtensionType", propOrder = {
    "requestTime",
    "conditions",
    "signer",
    "identityProvider",
    "authnProfile",
    "signRequester",
    "signService",
    "requestedSignatureAlgorithm",
    "certRequestProperties",
    "signMessage",
    "otherRequestInfo"
})
public class SignRequestExtensionType {

    /**
     * Time when the request was created.
     * 
     */
    @XmlElement(name = "RequestTime", required = true)
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar requestTime;
    /**
     * This element MUST include the element saml:AudienceRestriction which in turn MUST
     *                         contain one saml:Audience element, specifying the return URL for any resulting Sign Response
     *                         message.
     * 
     */
    @XmlElement(name = "Conditions", namespace = "urn:oasis:names:tc:SAML:2.0:assertion", required = true)
    protected ConditionsType conditions;
    /**
     * The identity of the signer expressed as a sequence of SAML attributes using the
     *                 AttributesType complex type.
     * 
     */
    @XmlElement(name = "Signer")
    protected AttributeStatementType signer;
    /**
     * The SAML entityID of the Identity Provider that MUST be used to authenticate the signer
     *                 before signing. The EntitID value is specified using the saml:NameIDType complex type and MUST include a
     *                 Format attribute with the value urn:oasis:names:tc:SAML:2.0:nameid-format:entity.
     * 
     */
    @XmlElement(name = "IdentityProvider", required = true)
    protected NameIDType identityProvider;
    /**
     * If set, the Version attribute MUST be 1.4 or higher.
     * 
     */
    @XmlElement(name = "AuthnProfile")
    protected String authnProfile;
    /**
     * The SAML entityID of the service that sends this request to the signing service. The
     *                 entityID value is specified using the saml:NameIDType complex type and MUST include a Format attribute
     *                 with the value urn:oasis:names:tc:SAML:2.0:nameid-format:entity.
     * 
     */
    @XmlElement(name = "SignRequester", required = true)
    protected NameIDType signRequester;
    /**
     * The SAML entityID of the service to which this Sign Request is sent. The entityID value is
     *                 specified using the saml:NameIDType complex type and MUST include a Format attribute with the value
     *                 urn:oasis:names:tc:SAML:2.0:nameid-format:entity.
     * 
     */
    @XmlElement(name = "SignService", required = true)
    protected NameIDType signService;
    /**
     * An identifier of the signature algorithm the requesting service prefers when generating
     *                 the requested signature.
     * 
     */
    @XmlElement(name = "RequestedSignatureAlgorithm")
    @XmlSchemaType(name = "anyURI")
    protected String requestedSignatureAlgorithm;
    /**
     * The requested properties of the signature certificate being issued by the signature
     *                 service.
     * 
     */
    @XmlElement(name = "CertRequestProperties")
    protected CertRequestPropertiesType certRequestProperties;
    /**
     * Sign message included as a choice of a Base64 encoded string or an encrypted sign
     *                 message.
     * 
     */
    @XmlElement(name = "SignMessage")
    protected SignMessageType signMessage;
    /**
     * Any additional inputs to the request extension.
     * 
     */
    @XmlElement(name = "OtherRequestInfo")
    protected AnyType otherRequestInfo;
    /**
     * The version of the DSS extensions specification. If absent, the version value defaults
     *                     to "1.1".
     * 
     */
    @XmlAttribute(name = "Version")
    protected String version;

    /**
     * Time when the request was created.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getRequestTime() {
        return requestTime;
    }

    /**
     * Sets the value of the requestTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     * @see #getRequestTime()
     */
    public void setRequestTime(XMLGregorianCalendar value) {
        this.requestTime = value;
    }

    /**
     * This element MUST include the element saml:AudienceRestriction which in turn MUST
     *                         contain one saml:Audience element, specifying the return URL for any resulting Sign Response
     *                         message.
     * 
     * @return
     *     possible object is
     *     {@link ConditionsType }
     *     
     */
    public ConditionsType getConditions() {
        return conditions;
    }

    /**
     * Sets the value of the conditions property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConditionsType }
     *     
     * @see #getConditions()
     */
    public void setConditions(ConditionsType value) {
        this.conditions = value;
    }

    /**
     * The identity of the signer expressed as a sequence of SAML attributes using the
     *                 AttributesType complex type.
     * 
     * @return
     *     possible object is
     *     {@link AttributeStatementType }
     *     
     */
    public AttributeStatementType getSigner() {
        return signer;
    }

    /**
     * Sets the value of the signer property.
     * 
     * @param value
     *     allowed object is
     *     {@link AttributeStatementType }
     *     
     * @see #getSigner()
     */
    public void setSigner(AttributeStatementType value) {
        this.signer = value;
    }

    /**
     * The SAML entityID of the Identity Provider that MUST be used to authenticate the signer
     *                 before signing. The EntitID value is specified using the saml:NameIDType complex type and MUST include a
     *                 Format attribute with the value urn:oasis:names:tc:SAML:2.0:nameid-format:entity.
     * 
     * @return
     *     possible object is
     *     {@link NameIDType }
     *     
     */
    public NameIDType getIdentityProvider() {
        return identityProvider;
    }

    /**
     * Sets the value of the identityProvider property.
     * 
     * @param value
     *     allowed object is
     *     {@link NameIDType }
     *     
     * @see #getIdentityProvider()
     */
    public void setIdentityProvider(NameIDType value) {
        this.identityProvider = value;
    }

    /**
     * If set, the Version attribute MUST be 1.4 or higher.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAuthnProfile() {
        return authnProfile;
    }

    /**
     * Sets the value of the authnProfile property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getAuthnProfile()
     */
    public void setAuthnProfile(String value) {
        this.authnProfile = value;
    }

    /**
     * The SAML entityID of the service that sends this request to the signing service. The
     *                 entityID value is specified using the saml:NameIDType complex type and MUST include a Format attribute
     *                 with the value urn:oasis:names:tc:SAML:2.0:nameid-format:entity.
     * 
     * @return
     *     possible object is
     *     {@link NameIDType }
     *     
     */
    public NameIDType getSignRequester() {
        return signRequester;
    }

    /**
     * Sets the value of the signRequester property.
     * 
     * @param value
     *     allowed object is
     *     {@link NameIDType }
     *     
     * @see #getSignRequester()
     */
    public void setSignRequester(NameIDType value) {
        this.signRequester = value;
    }

    /**
     * The SAML entityID of the service to which this Sign Request is sent. The entityID value is
     *                 specified using the saml:NameIDType complex type and MUST include a Format attribute with the value
     *                 urn:oasis:names:tc:SAML:2.0:nameid-format:entity.
     * 
     * @return
     *     possible object is
     *     {@link NameIDType }
     *     
     */
    public NameIDType getSignService() {
        return signService;
    }

    /**
     * Sets the value of the signService property.
     * 
     * @param value
     *     allowed object is
     *     {@link NameIDType }
     *     
     * @see #getSignService()
     */
    public void setSignService(NameIDType value) {
        this.signService = value;
    }

    /**
     * An identifier of the signature algorithm the requesting service prefers when generating
     *                 the requested signature.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRequestedSignatureAlgorithm() {
        return requestedSignatureAlgorithm;
    }

    /**
     * Sets the value of the requestedSignatureAlgorithm property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getRequestedSignatureAlgorithm()
     */
    public void setRequestedSignatureAlgorithm(String value) {
        this.requestedSignatureAlgorithm = value;
    }

    /**
     * The requested properties of the signature certificate being issued by the signature
     *                 service.
     * 
     * @return
     *     possible object is
     *     {@link CertRequestPropertiesType }
     *     
     */
    public CertRequestPropertiesType getCertRequestProperties() {
        return certRequestProperties;
    }

    /**
     * Sets the value of the certRequestProperties property.
     * 
     * @param value
     *     allowed object is
     *     {@link CertRequestPropertiesType }
     *     
     * @see #getCertRequestProperties()
     */
    public void setCertRequestProperties(CertRequestPropertiesType value) {
        this.certRequestProperties = value;
    }

    /**
     * Sign message included as a choice of a Base64 encoded string or an encrypted sign
     *                 message.
     * 
     * @return
     *     possible object is
     *     {@link SignMessageType }
     *     
     */
    public SignMessageType getSignMessage() {
        return signMessage;
    }

    /**
     * Sets the value of the signMessage property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignMessageType }
     *     
     * @see #getSignMessage()
     */
    public void setSignMessage(SignMessageType value) {
        this.signMessage = value;
    }

    /**
     * Any additional inputs to the request extension.
     * 
     * @return
     *     possible object is
     *     {@link AnyType }
     *     
     */
    public AnyType getOtherRequestInfo() {
        return otherRequestInfo;
    }

    /**
     * Sets the value of the otherRequestInfo property.
     * 
     * @param value
     *     allowed object is
     *     {@link AnyType }
     *     
     * @see #getOtherRequestInfo()
     */
    public void setOtherRequestInfo(AnyType value) {
        this.otherRequestInfo = value;
    }

    /**
     * The version of the DSS extensions specification. If absent, the version value defaults
     *                     to "1.1".
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersion() {
        if (version == null) {
            return "1.1";
        } else {
            return version;
        }
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getVersion()
     */
    public void setVersion(String value) {
        this.version = value;
    }

}
